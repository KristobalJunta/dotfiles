# If not running interactively, don't do anything
case $- in
  *i*)        ;;
  *) return   ;;
esac

# Source global definitions
if [ -f /etc/bashrc ]; then
  . /etc/bashrc
fi

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth
HISTSIZE=1000

shopt -s histappend     # append to the history file
shopt -s checkwinsize   # check the window size after each command
shopt -s cmdhist        # save multi-line commands as single history line

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    source /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    source /etc/bash_completion
  fi
fi

# enable color support
if [ -x /usr/bin/dircolors ]; then
  if [ -r ~/.dircolors ] ; then
    eval "$(dircolors -b ~/.dircolors)"
  else
    eval "$(dircolors -b)"
  fi

  alias ls='ls --color=auto'
  alias grep='grep --color=auto'
  alias fgrep='fgrep --color=auto'
  alias egrep='egrep --color=auto'
fi

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# custom bash functions
rdos2unix ()
{
  find "$1" -type f -print0 | xargs -0 dos2unix
}

# usage: ex <file>
ex ()
{
  if [ -f "$1" ] ; then
    case $1 in
      *.tar.bz2)  tar xjf "$1"    ;;
      *.tar.gz)   tar xzf "$1"    ;;
      *.bz2)      bunzip2 "$1"    ;;
      *.rar)      unrar x "$1"    ;;
      *.gz)       gunzip "$1"     ;;
      *.tar)      tar xf "$1"     ;;
      *.tbz2)     tar xjf "$1"    ;;
      *.tgz)      tar xzf "$1"    ;;
      *.zip)      unzip "$1"      ;;
      *.Z)        uncompress "$1" ;;
      *.7z)       7z x "$1"       ;;
      *.deb)      ar x "$1"       ;;
      *.tar.xz)   tar xf "$1"     ;;
      *.tar.zst)  unzstd "$1"     ;;
      *)          echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# additional PATH
export PATH="$PATH:$HOME/.local/bin"
export PATH="$PATH:$HOME/bin"

# prompt emoji
case $(date +%a) in
    Mon)
        PROMPT_EMOJI="✨✨✨"
        ;;
    Tue)
        PROMPT_EMOJI="🐄🐄🐄"
        ;;
    Wed)
        PROMPT_EMOJI="🐸🐸🐸"
        ;;
    Thu)
        PROMPT_EMOJI="🐟🐟🐟"
        ;;
    Fri)
        PROMPT_EMOJI="🍺🍺🍺"
        ;;
    Sat)
        PROMPT_EMOJI="🛋️🛋️🛋️"
        ;;
    Sun)
        PROMPT_EMOJI="☀️☀️☀️"
        ;;
    *)
        PROMPT_EMOJI="✨✨✨"
        ;;
esac

export PROMPT_EMOJI

# aliases
alias mc="mc -b"

export VISUAL=$(which vim)
export EDITOR=$(which vim)
export LESS="-SRXF"
export POETRY_VIRTUALENVS_IN_PROJECT=1

if [ -n "$(command -v starship)" ]; then
  eval "$(starship init bash)"
fi
